<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:os-core="http://www.openspaces.org/schema/core"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-5.1.xsd
       http://www.openspaces.org/schema/core http://www.openspaces.org/schema/15.0/core/openspaces-core.xsd">

    <bean id="propertiesConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="true" />
        <property name="properties">
            <props>
                <prop key="sourceSpaceName">mySpace</prop>
                <prop key="numPartitions">1</prop>
                <prop key="hb.dialect">org.hibernate.dialect.SQLServer2012Dialect</prop>
                <prop key="db.driver">com.microsoft.sqlserver.jdbc.SQLServerDriver</prop>
                <prop key="db.url">jdbc:sqlserver://localhost;databaseName=gs_test</prop>
                <prop key="db.username">sa</prop>
                <prop key="db.password">giga1234!</prop>
                <prop key="hbm2ddl.auto">update</prop>
                <prop key="hibernateDebug">false</prop>
            </props>
        </property>
    </bean>


    <!--
        A JDBC datasource pool that connects to HSQL.
    -->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${db.driver"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
    </bean>

    <!--
        Hibernate SessionFactory bean. Uses the pooled data source to connect to the database.
    -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--
        <property name="annotatedClasses">
            <list>
                <value>com.gigaspaces.demo.common.Person</value>
            </list>
        </property>
        -->
        <property name="packagesToScan" value="com.gigaspaces.demo"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.NoCacheProvider</prop>
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <prop key="hibernate.cache.use_query_cache">false</prop>
                <prop key="hibernate.show_sql">${hibernateDebug}</prop>
                <prop key="hibernate.format_sql">${hibernateDebug}</prop>
                <prop key="hibernate.use_sql_comments">${hibernateDebug}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hbm2ddl.auto}</prop>
            </props>
        </property>
    </bean>

    <!--
        An external data source that will be responsible for persisting changes done on the cluster that
        connects to this mirror using Hibernate.
    -->
    <bean id="hibernateSpaceSynchronizationEndpoint" class="org.openspaces.persistency.hibernate.DefaultHibernateSpaceSynchronizationEndpointFactoryBean">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="mirrorExceptionHandler" class="com.gigaspaces.demo.MyMirrorExceptionHandler"/>

    <bean id="exceptionHandlingSpaceSynchronizationEndpoint"
          class="org.openspaces.persistency.patterns.SpaceSynchronizationEndpointExceptionHandler">
        <constructor-arg ref="hibernateSpaceSynchronizationEndpoint"/>
        <constructor-arg ref="mirrorExceptionHandler"/>
    </bean>
    <!--
        The mirror space. Uses the Hibernate external data source. Persists changes done on the Space that
        connects to this mirror space into the database using Hibernate.
    -->
    <os-core:mirror id="mirror" url="/./mirror-service" space-sync-endpoint="exceptionHandlingSpaceSynchronizationEndpoint" operation-grouping="group-by-space-transaction">
        <os-core:source-space name="${sourceSpaceName}" partitions="${numPartitions}" backups="1"/>
    </os-core:mirror>

</beans>
