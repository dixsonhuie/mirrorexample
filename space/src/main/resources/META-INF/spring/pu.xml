<?xml version="1.0" encoding="UTF-8"?>
<!--
    top level element of the Spring configuration. Note the multiple namespace definition for both
    GigaSpaces and Spring. You can simply copy and paste this portion of the pu.xml file
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:os-core="http://www.openspaces.org/schema/core"
       xmlns:os-events="http://www.openspaces.org/schema/events"
       xmlns:os-remoting="http://www.openspaces.org/schema/remoting"
       xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-5.1.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-5.1.xsd
    http://www.openspaces.org/schema/core http://www.openspaces.org/schema/15.0/core/openspaces-core.xsd
    http://www.openspaces.org/schema/events http://www.openspaces.org/schema/15.0/events/openspaces-events.xsd
    http://www.openspaces.org/schema/remoting http://www.openspaces.org/schema/15.0/remoting/openspaces-remoting.xsd">

    <bean id="propertiesConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="true" />
        <property name="properties">
            <props>
                <prop key="sourceSpaceName">mySpace</prop>
                <prop key="hb.dialect">org.hibernate.dialect.SQLServer2012Dialect</prop>
                <prop key="db.driver">com.microsoft.sqlserver.jdbc.SQLServerDriver</prop>
                <prop key="db.url">jdbc:sqlserver://localhost;databaseName=gs_test</prop>
                <prop key="db.username">sa</prop>
                <prop key="db.password">giga1234!</prop>
                <prop key="hbm2ddl.auto">update</prop>
                <prop key="hibernateDebug">false</prop>
            </props>
        </property>
    </bean>

    <context:component-scan base-package="com.gigaspaces.demo" />

    <!-- Enables to configure Spring beans through annotations   -->
    <context:annotation-config />

    <!-- Enable @PostPrimary and others annotation support. -->
    <os-core:annotation-support />

    <!-- Enables using @Polling and @Notify annotations to creating polling and notify containers  -->
    <os-events:annotation-support />

    <!-- Enables using @RemotingService and other remoting related annotations   -->
    <os-remoting:annotation-support />

    <!-- initial load -->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${db.driver}"/>
        <property name="url" value="{$db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
    </bean>

    <!--
        Hibernate SessionFactory bean. Uses the pooled data source to connect to the database.
    -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.gigaspaces.demo"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hb.dialect}</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.NoCacheProvider</prop>
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <prop key="hibernate.cache.use_query_cache">false</prop>
                <prop key="hibernate.show_sql">${hibernateDebug}</prop>
                <prop key="hibernate.format_sql">${hibernateDebug}</prop>
                <prop key="hibernate.use_sql_comments">${hibernateDebug}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hbm2ddl.auto}</prop>
            </props>
        </property>
    </bean>
    <bean id="hibernateSpaceDataSource" class="org.openspaces.persistency.hibernate.DefaultHibernateSpaceDataSourceFactoryBean">
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="initialLoadChunkSize" value="2000"/>
    </bean>

    <!-- end initial load -->


    <!--
        A bean representing a Space. Here we configure an embedded space. Note
        that we do not specify here the cluster topology of the Space. It is
        declared by the os-sla:sla element of this pu.xml file.
    -->
    <os-core:embedded-space id="space" space-name="${sourceSpaceName}" mirrored="true" space-data-source="hibernateSpaceDataSource">

        <os-core:properties>
            <props>
                <!-- ALL IN CACHE -->
                <prop key="space-config.engine.cache_policy">1</prop>
            </props>
        </os-core:properties>
    </os-core:embedded-space>

    <!-- Defines a distributed transaction manager.-->
    <os-core:distributed-tx-manager id="transactionManager" />

    <!-- Define the GigaSpace instance that the application will use to access the space  -->
    <os-core:giga-space id="gigaSpace" space="space" tx-manager="transactionManager"/>

</beans>
